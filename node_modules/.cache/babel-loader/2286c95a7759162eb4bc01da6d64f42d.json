{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport { QueryObserver } from './queryObserver';\nimport { hasNextPage, hasPreviousPage, infiniteQueryBehavior } from './infiniteQueryBehavior';\nexport var InfiniteQueryObserver = /*#__PURE__*/function (_QueryObserver) {\n  _inheritsLoose(InfiniteQueryObserver, _QueryObserver); // Type override\n  // Type override\n  // Type override\n  // eslint-disable-next-line @typescript-eslint/no-useless-constructor\n\n\n  function InfiniteQueryObserver(client, options) {\n    return _QueryObserver.call(this, client, options) || this;\n  }\n\n  var _proto = InfiniteQueryObserver.prototype;\n\n  _proto.bindMethods = function bindMethods() {\n    _QueryObserver.prototype.bindMethods.call(this);\n\n    this.fetchNextPage = this.fetchNextPage.bind(this);\n    this.fetchPreviousPage = this.fetchPreviousPage.bind(this);\n  };\n\n  _proto.setOptions = function setOptions(options) {\n    _QueryObserver.prototype.setOptions.call(this, _extends({}, options, {\n      behavior: infiniteQueryBehavior()\n    }));\n  };\n\n  _proto.fetchNextPage = function fetchNextPage(options) {\n    return this.fetch({\n      cancelRefetch: true,\n      throwOnError: options == null ? void 0 : options.throwOnError,\n      meta: {\n        fetchMore: {\n          direction: 'forward',\n          pageParam: options == null ? void 0 : options.pageParam\n        }\n      }\n    });\n  };\n\n  _proto.fetchPreviousPage = function fetchPreviousPage(options) {\n    return this.fetch({\n      cancelRefetch: true,\n      throwOnError: options == null ? void 0 : options.throwOnError,\n      meta: {\n        fetchMore: {\n          direction: 'backward',\n          pageParam: options == null ? void 0 : options.pageParam\n        }\n      }\n    });\n  };\n\n  _proto.getNewResult = function getNewResult(willFetch) {\n    var _state$data, _state$data2, _state$fetchMeta, _state$fetchMeta$fetc, _state$fetchMeta2, _state$fetchMeta2$fet;\n\n    var _this$getCurrentQuery = this.getCurrentQuery(),\n        state = _this$getCurrentQuery.state;\n\n    var result = _QueryObserver.prototype.getNewResult.call(this, willFetch);\n\n    return _extends({}, result, {\n      fetchNextPage: this.fetchNextPage,\n      fetchPreviousPage: this.fetchPreviousPage,\n      hasNextPage: hasNextPage(this.options, (_state$data = state.data) == null ? void 0 : _state$data.pages),\n      hasPreviousPage: hasPreviousPage(this.options, (_state$data2 = state.data) == null ? void 0 : _state$data2.pages),\n      isFetchingNextPage: state.isFetching && ((_state$fetchMeta = state.fetchMeta) == null ? void 0 : (_state$fetchMeta$fetc = _state$fetchMeta.fetchMore) == null ? void 0 : _state$fetchMeta$fetc.direction) === 'forward',\n      isFetchingPreviousPage: state.isFetching && ((_state$fetchMeta2 = state.fetchMeta) == null ? void 0 : (_state$fetchMeta2$fet = _state$fetchMeta2.fetchMore) == null ? void 0 : _state$fetchMeta2$fet.direction) === 'backward'\n    });\n  };\n\n  return InfiniteQueryObserver;\n}(QueryObserver);","map":{"version":3,"sources":["/home/gudu/tryouts/My-Portfolio/Cart-Management_System/node_modules/react-query/es/core/infiniteQueryObserver.js"],"names":["_extends","_inheritsLoose","QueryObserver","hasNextPage","hasPreviousPage","infiniteQueryBehavior","InfiniteQueryObserver","_QueryObserver","client","options","call","_proto","prototype","bindMethods","fetchNextPage","bind","fetchPreviousPage","setOptions","behavior","fetch","cancelRefetch","throwOnError","meta","fetchMore","direction","pageParam","getNewResult","willFetch","_state$data","_state$data2","_state$fetchMeta","_state$fetchMeta$fetc","_state$fetchMeta2","_state$fetchMeta2$fet","_this$getCurrentQuery","getCurrentQuery","state","result","data","pages","isFetchingNextPage","isFetching","fetchMeta","isFetchingPreviousPage"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport { QueryObserver } from './queryObserver';\nimport { hasNextPage, hasPreviousPage, infiniteQueryBehavior } from './infiniteQueryBehavior';\nexport var InfiniteQueryObserver = /*#__PURE__*/function (_QueryObserver) {\n  _inheritsLoose(InfiniteQueryObserver, _QueryObserver);\n\n  // Type override\n  // Type override\n  // Type override\n  // eslint-disable-next-line @typescript-eslint/no-useless-constructor\n  function InfiniteQueryObserver(client, options) {\n    return _QueryObserver.call(this, client, options) || this;\n  }\n\n  var _proto = InfiniteQueryObserver.prototype;\n\n  _proto.bindMethods = function bindMethods() {\n    _QueryObserver.prototype.bindMethods.call(this);\n\n    this.fetchNextPage = this.fetchNextPage.bind(this);\n    this.fetchPreviousPage = this.fetchPreviousPage.bind(this);\n  };\n\n  _proto.setOptions = function setOptions(options) {\n    _QueryObserver.prototype.setOptions.call(this, _extends({}, options, {\n      behavior: infiniteQueryBehavior()\n    }));\n  };\n\n  _proto.fetchNextPage = function fetchNextPage(options) {\n    return this.fetch({\n      cancelRefetch: true,\n      throwOnError: options == null ? void 0 : options.throwOnError,\n      meta: {\n        fetchMore: {\n          direction: 'forward',\n          pageParam: options == null ? void 0 : options.pageParam\n        }\n      }\n    });\n  };\n\n  _proto.fetchPreviousPage = function fetchPreviousPage(options) {\n    return this.fetch({\n      cancelRefetch: true,\n      throwOnError: options == null ? void 0 : options.throwOnError,\n      meta: {\n        fetchMore: {\n          direction: 'backward',\n          pageParam: options == null ? void 0 : options.pageParam\n        }\n      }\n    });\n  };\n\n  _proto.getNewResult = function getNewResult(willFetch) {\n    var _state$data, _state$data2, _state$fetchMeta, _state$fetchMeta$fetc, _state$fetchMeta2, _state$fetchMeta2$fet;\n\n    var _this$getCurrentQuery = this.getCurrentQuery(),\n        state = _this$getCurrentQuery.state;\n\n    var result = _QueryObserver.prototype.getNewResult.call(this, willFetch);\n\n    return _extends({}, result, {\n      fetchNextPage: this.fetchNextPage,\n      fetchPreviousPage: this.fetchPreviousPage,\n      hasNextPage: hasNextPage(this.options, (_state$data = state.data) == null ? void 0 : _state$data.pages),\n      hasPreviousPage: hasPreviousPage(this.options, (_state$data2 = state.data) == null ? void 0 : _state$data2.pages),\n      isFetchingNextPage: state.isFetching && ((_state$fetchMeta = state.fetchMeta) == null ? void 0 : (_state$fetchMeta$fetc = _state$fetchMeta.fetchMore) == null ? void 0 : _state$fetchMeta$fetc.direction) === 'forward',\n      isFetchingPreviousPage: state.isFetching && ((_state$fetchMeta2 = state.fetchMeta) == null ? void 0 : (_state$fetchMeta2$fet = _state$fetchMeta2.fetchMore) == null ? void 0 : _state$fetchMeta2$fet.direction) === 'backward'\n    });\n  };\n\n  return InfiniteQueryObserver;\n}(QueryObserver);"]},"metadata":{},"sourceType":"module"}