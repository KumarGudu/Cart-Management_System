{"ast":null,"code":"import _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport { difference, getQueryKeyHashFn, replaceAt } from './utils';\nimport { notifyManager } from './notifyManager';\nimport { QueryObserver } from './queryObserver';\nimport { Subscribable } from './subscribable';\nexport var QueriesObserver = /*#__PURE__*/function (_Subscribable) {\n  _inheritsLoose(QueriesObserver, _Subscribable);\n\n  function QueriesObserver(client, queries) {\n    var _this;\n\n    _this = _Subscribable.call(this) || this;\n    _this.client = client;\n    _this.queries = queries || [];\n    _this.result = [];\n    _this.observers = []; // Subscribe to queries\n\n    _this.updateObservers();\n\n    return _this;\n  }\n\n  var _proto = QueriesObserver.prototype;\n\n  _proto.onSubscribe = function onSubscribe() {\n    var _this2 = this;\n\n    if (this.listeners.length === 1) {\n      this.observers.forEach(function (observer) {\n        observer.subscribe(function (result) {\n          _this2.onUpdate(observer, result);\n        });\n      });\n    }\n  };\n\n  _proto.onUnsubscribe = function onUnsubscribe() {\n    if (!this.listeners.length) {\n      this.destroy();\n    }\n  };\n\n  _proto.destroy = function destroy() {\n    this.listeners = [];\n    this.observers.forEach(function (observer) {\n      observer.destroy();\n    });\n  };\n\n  _proto.setQueries = function setQueries(queries) {\n    this.queries = queries;\n    this.updateObservers();\n  };\n\n  _proto.getCurrentResult = function getCurrentResult() {\n    return this.result;\n  };\n\n  _proto.updateObservers = function updateObservers() {\n    var _this3 = this;\n\n    var hasIndexChange = false;\n    var prevObservers = this.observers;\n    var newObservers = this.queries.map(function (options, i) {\n      var observer = prevObservers[i];\n\n      var defaultedOptions = _this3.client.defaultQueryObserverOptions(options);\n\n      var hashFn = getQueryKeyHashFn(defaultedOptions);\n      defaultedOptions.queryHash = hashFn(defaultedOptions.queryKey);\n\n      if (!observer || observer.getCurrentQuery().queryHash !== defaultedOptions.queryHash) {\n        hasIndexChange = true;\n        observer = prevObservers.find(function (x) {\n          return x.getCurrentQuery().queryHash === defaultedOptions.queryHash;\n        });\n      }\n\n      if (observer) {\n        observer.setOptions(defaultedOptions);\n        return observer;\n      }\n\n      return new QueryObserver(_this3.client, defaultedOptions);\n    });\n\n    if (prevObservers.length === newObservers.length && !hasIndexChange) {\n      return;\n    }\n\n    this.observers = newObservers;\n    this.result = newObservers.map(function (observer) {\n      return observer.getCurrentResult();\n    });\n\n    if (!this.listeners.length) {\n      return;\n    }\n\n    difference(prevObservers, newObservers).forEach(function (observer) {\n      observer.destroy();\n    });\n    difference(newObservers, prevObservers).forEach(function (observer) {\n      observer.subscribe(function (result) {\n        _this3.onUpdate(observer, result);\n      });\n    });\n    this.notify();\n  };\n\n  _proto.onUpdate = function onUpdate(observer, result) {\n    var index = this.observers.indexOf(observer);\n\n    if (index !== -1) {\n      this.result = replaceAt(this.result, index, result);\n      this.notify();\n    }\n  };\n\n  _proto.notify = function notify() {\n    var _this4 = this;\n\n    notifyManager.batch(function () {\n      _this4.listeners.forEach(function (listener) {\n        listener(_this4.result);\n      });\n    });\n  };\n\n  return QueriesObserver;\n}(Subscribable);","map":{"version":3,"sources":["/home/gudu/tryouts/My-Portfolio/Cart-Management_System/node_modules/react-query/es/core/queriesObserver.js"],"names":["_inheritsLoose","difference","getQueryKeyHashFn","replaceAt","notifyManager","QueryObserver","Subscribable","QueriesObserver","_Subscribable","client","queries","_this","call","result","observers","updateObservers","_proto","prototype","onSubscribe","_this2","listeners","length","forEach","observer","subscribe","onUpdate","onUnsubscribe","destroy","setQueries","getCurrentResult","_this3","hasIndexChange","prevObservers","newObservers","map","options","i","defaultedOptions","defaultQueryObserverOptions","hashFn","queryHash","queryKey","getCurrentQuery","find","x","setOptions","notify","index","indexOf","_this4","batch","listener"],"mappings":"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","sourcesContent":["import _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport { difference, getQueryKeyHashFn, replaceAt } from './utils';\nimport { notifyManager } from './notifyManager';\nimport { QueryObserver } from './queryObserver';\nimport { Subscribable } from './subscribable';\nexport var QueriesObserver = /*#__PURE__*/function (_Subscribable) {\n  _inheritsLoose(QueriesObserver, _Subscribable);\n\n  function QueriesObserver(client, queries) {\n    var _this;\n\n    _this = _Subscribable.call(this) || this;\n    _this.client = client;\n    _this.queries = queries || [];\n    _this.result = [];\n    _this.observers = []; // Subscribe to queries\n\n    _this.updateObservers();\n\n    return _this;\n  }\n\n  var _proto = QueriesObserver.prototype;\n\n  _proto.onSubscribe = function onSubscribe() {\n    var _this2 = this;\n\n    if (this.listeners.length === 1) {\n      this.observers.forEach(function (observer) {\n        observer.subscribe(function (result) {\n          _this2.onUpdate(observer, result);\n        });\n      });\n    }\n  };\n\n  _proto.onUnsubscribe = function onUnsubscribe() {\n    if (!this.listeners.length) {\n      this.destroy();\n    }\n  };\n\n  _proto.destroy = function destroy() {\n    this.listeners = [];\n    this.observers.forEach(function (observer) {\n      observer.destroy();\n    });\n  };\n\n  _proto.setQueries = function setQueries(queries) {\n    this.queries = queries;\n    this.updateObservers();\n  };\n\n  _proto.getCurrentResult = function getCurrentResult() {\n    return this.result;\n  };\n\n  _proto.updateObservers = function updateObservers() {\n    var _this3 = this;\n\n    var hasIndexChange = false;\n    var prevObservers = this.observers;\n    var newObservers = this.queries.map(function (options, i) {\n      var observer = prevObservers[i];\n\n      var defaultedOptions = _this3.client.defaultQueryObserverOptions(options);\n\n      var hashFn = getQueryKeyHashFn(defaultedOptions);\n      defaultedOptions.queryHash = hashFn(defaultedOptions.queryKey);\n\n      if (!observer || observer.getCurrentQuery().queryHash !== defaultedOptions.queryHash) {\n        hasIndexChange = true;\n        observer = prevObservers.find(function (x) {\n          return x.getCurrentQuery().queryHash === defaultedOptions.queryHash;\n        });\n      }\n\n      if (observer) {\n        observer.setOptions(defaultedOptions);\n        return observer;\n      }\n\n      return new QueryObserver(_this3.client, defaultedOptions);\n    });\n\n    if (prevObservers.length === newObservers.length && !hasIndexChange) {\n      return;\n    }\n\n    this.observers = newObservers;\n    this.result = newObservers.map(function (observer) {\n      return observer.getCurrentResult();\n    });\n\n    if (!this.listeners.length) {\n      return;\n    }\n\n    difference(prevObservers, newObservers).forEach(function (observer) {\n      observer.destroy();\n    });\n    difference(newObservers, prevObservers).forEach(function (observer) {\n      observer.subscribe(function (result) {\n        _this3.onUpdate(observer, result);\n      });\n    });\n    this.notify();\n  };\n\n  _proto.onUpdate = function onUpdate(observer, result) {\n    var index = this.observers.indexOf(observer);\n\n    if (index !== -1) {\n      this.result = replaceAt(this.result, index, result);\n      this.notify();\n    }\n  };\n\n  _proto.notify = function notify() {\n    var _this4 = this;\n\n    notifyManager.batch(function () {\n      _this4.listeners.forEach(function (listener) {\n        listener(_this4.result);\n      });\n    });\n  };\n\n  return QueriesObserver;\n}(Subscribable);"]},"metadata":{},"sourceType":"module"}