{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport { getDefaultState } from './mutation';\nimport { notifyManager } from './notifyManager';\nimport { Subscribable } from './subscribable';\nimport { getStatusProps } from './utils'; // TYPES\n// CLASS\n\nexport var MutationObserver = /*#__PURE__*/function (_Subscribable) {\n  _inheritsLoose(MutationObserver, _Subscribable);\n\n  function MutationObserver(client, options) {\n    var _this;\n\n    _this = _Subscribable.call(this) || this;\n    _this.client = client;\n\n    _this.setOptions(options);\n\n    _this.bindMethods();\n\n    _this.updateResult();\n\n    return _this;\n  }\n\n  var _proto = MutationObserver.prototype;\n\n  _proto.bindMethods = function bindMethods() {\n    this.mutate = this.mutate.bind(this);\n    this.reset = this.reset.bind(this);\n  };\n\n  _proto.setOptions = function setOptions(options) {\n    this.options = this.client.defaultMutationOptions(options);\n  };\n\n  _proto.onUnsubscribe = function onUnsubscribe() {\n    if (!this.listeners.length) {\n      var _this$currentMutation;\n\n      (_this$currentMutation = this.currentMutation) == null ? void 0 : _this$currentMutation.removeObserver(this);\n    }\n  };\n\n  _proto.onMutationUpdate = function onMutationUpdate(action) {\n    this.updateResult(); // Determine which callbacks to trigger\n\n    var notifyOptions = {\n      listeners: true\n    };\n\n    if (action.type === 'success') {\n      notifyOptions.onSuccess = true;\n    } else if (action.type === 'error') {\n      notifyOptions.onError = true;\n    }\n\n    this.notify(notifyOptions);\n  };\n\n  _proto.getCurrentResult = function getCurrentResult() {\n    return this.currentResult;\n  };\n\n  _proto.reset = function reset() {\n    this.currentMutation = undefined;\n    this.updateResult();\n    this.notify({\n      listeners: true\n    });\n  };\n\n  _proto.mutate = function mutate(variables, options) {\n    this.mutateOptions = options;\n\n    if (this.currentMutation) {\n      this.currentMutation.removeObserver(this);\n    }\n\n    this.currentMutation = this.client.getMutationCache().build(this.client, _extends({}, this.options, {\n      variables: variables != null ? variables : this.options.variables\n    }));\n    this.currentMutation.addObserver(this);\n    return this.currentMutation.execute();\n  };\n\n  _proto.updateResult = function updateResult() {\n    var state = this.currentMutation ? this.currentMutation.state : getDefaultState();\n    this.currentResult = _extends({}, state, getStatusProps(state.status), {\n      mutate: this.mutate,\n      reset: this.reset\n    });\n  };\n\n  _proto.notify = function notify(options) {\n    var _this2 = this;\n\n    notifyManager.batch(function () {\n      // First trigger the mutate callbacks\n      if (_this2.mutateOptions) {\n        if (options.onSuccess) {\n          _this2.mutateOptions.onSuccess == null ? void 0 : _this2.mutateOptions.onSuccess(_this2.currentResult.data, _this2.currentResult.variables, _this2.currentResult.context);\n          _this2.mutateOptions.onSettled == null ? void 0 : _this2.mutateOptions.onSettled(_this2.currentResult.data, null, _this2.currentResult.variables, _this2.currentResult.context);\n        } else if (options.onError) {\n          _this2.mutateOptions.onError == null ? void 0 : _this2.mutateOptions.onError(_this2.currentResult.error, _this2.currentResult.variables, _this2.currentResult.context);\n          _this2.mutateOptions.onSettled == null ? void 0 : _this2.mutateOptions.onSettled(undefined, _this2.currentResult.error, _this2.currentResult.variables, _this2.currentResult.context);\n        }\n      } // Then trigger the listeners\n\n\n      if (options.listeners) {\n        _this2.listeners.forEach(function (listener) {\n          listener(_this2.currentResult);\n        });\n      }\n    });\n  };\n\n  return MutationObserver;\n}(Subscribable);","map":{"version":3,"sources":["/home/gudu/tryouts/My-Portfolio/Cart-Management_System/node_modules/react-query/es/core/mutationObserver.js"],"names":["_extends","_inheritsLoose","getDefaultState","notifyManager","Subscribable","getStatusProps","MutationObserver","_Subscribable","client","options","_this","call","setOptions","bindMethods","updateResult","_proto","prototype","mutate","bind","reset","defaultMutationOptions","onUnsubscribe","listeners","length","_this$currentMutation","currentMutation","removeObserver","onMutationUpdate","action","notifyOptions","type","onSuccess","onError","notify","getCurrentResult","currentResult","undefined","variables","mutateOptions","getMutationCache","build","addObserver","execute","state","status","_this2","batch","data","context","onSettled","error","forEach","listener"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport { getDefaultState } from './mutation';\nimport { notifyManager } from './notifyManager';\nimport { Subscribable } from './subscribable';\nimport { getStatusProps } from './utils'; // TYPES\n\n// CLASS\nexport var MutationObserver = /*#__PURE__*/function (_Subscribable) {\n  _inheritsLoose(MutationObserver, _Subscribable);\n\n  function MutationObserver(client, options) {\n    var _this;\n\n    _this = _Subscribable.call(this) || this;\n    _this.client = client;\n\n    _this.setOptions(options);\n\n    _this.bindMethods();\n\n    _this.updateResult();\n\n    return _this;\n  }\n\n  var _proto = MutationObserver.prototype;\n\n  _proto.bindMethods = function bindMethods() {\n    this.mutate = this.mutate.bind(this);\n    this.reset = this.reset.bind(this);\n  };\n\n  _proto.setOptions = function setOptions(options) {\n    this.options = this.client.defaultMutationOptions(options);\n  };\n\n  _proto.onUnsubscribe = function onUnsubscribe() {\n    if (!this.listeners.length) {\n      var _this$currentMutation;\n\n      (_this$currentMutation = this.currentMutation) == null ? void 0 : _this$currentMutation.removeObserver(this);\n    }\n  };\n\n  _proto.onMutationUpdate = function onMutationUpdate(action) {\n    this.updateResult(); // Determine which callbacks to trigger\n\n    var notifyOptions = {\n      listeners: true\n    };\n\n    if (action.type === 'success') {\n      notifyOptions.onSuccess = true;\n    } else if (action.type === 'error') {\n      notifyOptions.onError = true;\n    }\n\n    this.notify(notifyOptions);\n  };\n\n  _proto.getCurrentResult = function getCurrentResult() {\n    return this.currentResult;\n  };\n\n  _proto.reset = function reset() {\n    this.currentMutation = undefined;\n    this.updateResult();\n    this.notify({\n      listeners: true\n    });\n  };\n\n  _proto.mutate = function mutate(variables, options) {\n    this.mutateOptions = options;\n\n    if (this.currentMutation) {\n      this.currentMutation.removeObserver(this);\n    }\n\n    this.currentMutation = this.client.getMutationCache().build(this.client, _extends({}, this.options, {\n      variables: variables != null ? variables : this.options.variables\n    }));\n    this.currentMutation.addObserver(this);\n    return this.currentMutation.execute();\n  };\n\n  _proto.updateResult = function updateResult() {\n    var state = this.currentMutation ? this.currentMutation.state : getDefaultState();\n    this.currentResult = _extends({}, state, getStatusProps(state.status), {\n      mutate: this.mutate,\n      reset: this.reset\n    });\n  };\n\n  _proto.notify = function notify(options) {\n    var _this2 = this;\n\n    notifyManager.batch(function () {\n      // First trigger the mutate callbacks\n      if (_this2.mutateOptions) {\n        if (options.onSuccess) {\n          _this2.mutateOptions.onSuccess == null ? void 0 : _this2.mutateOptions.onSuccess(_this2.currentResult.data, _this2.currentResult.variables, _this2.currentResult.context);\n          _this2.mutateOptions.onSettled == null ? void 0 : _this2.mutateOptions.onSettled(_this2.currentResult.data, null, _this2.currentResult.variables, _this2.currentResult.context);\n        } else if (options.onError) {\n          _this2.mutateOptions.onError == null ? void 0 : _this2.mutateOptions.onError(_this2.currentResult.error, _this2.currentResult.variables, _this2.currentResult.context);\n          _this2.mutateOptions.onSettled == null ? void 0 : _this2.mutateOptions.onSettled(undefined, _this2.currentResult.error, _this2.currentResult.variables, _this2.currentResult.context);\n        }\n      } // Then trigger the listeners\n\n\n      if (options.listeners) {\n        _this2.listeners.forEach(function (listener) {\n          listener(_this2.currentResult);\n        });\n      }\n    });\n  };\n\n  return MutationObserver;\n}(Subscribable);"]},"metadata":{},"sourceType":"module"}