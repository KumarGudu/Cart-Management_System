{"ast":null,"code":"import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import _toConsumableArray from\"/home/gudu/tryouts/My-Portfolio/Cart-Management_System/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _objectSpread from\"/home/gudu/tryouts/My-Portfolio/Cart-Management_System/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/home/gudu/tryouts/My-Portfolio/Cart-Management_System/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _regeneratorRuntime from\"/home/gudu/tryouts/My-Portfolio/Cart-Management_System/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/gudu/tryouts/My-Portfolio/Cart-Management_System/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import{useState}from'react';import{useQuery}from'react-query';// Components\nimport Item from'./Item/Item';import Cart from'./Cart/Cart';import Drawer from'@material-ui/core/Drawer';import LinearProgress from'@material-ui/core/LinearProgress';import Grid from'@material-ui/core/Grid';import AddShoppingCartIcon from'@material-ui/icons/AddShoppingCart';import Badge from'@material-ui/core/Badge';// Styles\nimport{Wrapper,StyledButton}from'./App.styles';// Types\nvar getProducts=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return fetch('https://fakestoreapi.com/products');case 2:_context.next=4;return _context.sent.json();case 4:return _context.abrupt(\"return\",_context.sent);case 5:case\"end\":return _context.stop();}}},_callee);}));return function getProducts(){return _ref.apply(this,arguments);};}();var App=function App(){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),cartOpen=_useState2[0],setCartOpen=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),cartItems=_useState4[0],setCartItems=_useState4[1];var _useQuery=useQuery('products',getProducts),data=_useQuery.data,isLoading=_useQuery.isLoading,error=_useQuery.error;console.log(data);var getTotalItems=function getTotalItems(items){return items.reduce(function(ack,item){return ack+item.amount;},0);};var handleAddToCart=function handleAddToCart(clickedItem){setCartItems(function(prev){// 1. Is the item already added in the cart?\nvar isItemInCart=prev.find(function(item){return item.id===clickedItem.id;});if(isItemInCart){return prev.map(function(item){return item.id===clickedItem.id?_objectSpread(_objectSpread({},item),{},{amount:item.amount+1}):item;});}// First time the item is added\nreturn[].concat(_toConsumableArray(prev),[_objectSpread(_objectSpread({},clickedItem),{},{amount:1})]);});};var handleRemoveFromCart=function handleRemoveFromCart(id){setCartItems(function(prev){return prev.reduce(function(ack,item){if(item.id===id){if(item.amount===1)return ack;return[].concat(_toConsumableArray(ack),[_objectSpread(_objectSpread({},item),{},{amount:item.amount-1})]);}else{return[].concat(_toConsumableArray(ack),[item]);}},[]);});};if(isLoading)return/*#__PURE__*/_jsx(LinearProgress,{});if(error)return/*#__PURE__*/_jsx(\"div\",{children:\"Something went wrong ...\"});return/*#__PURE__*/_jsxs(Wrapper,{children:[/*#__PURE__*/_jsx(Drawer,{anchor:\"right\",open:cartOpen,onClose:function onClose(){return setCartOpen(false);},children:/*#__PURE__*/_jsx(Cart,{cartItems:cartItems,addToCart:handleAddToCart,removeFromCart:handleRemoveFromCart})}),/*#__PURE__*/_jsx(StyledButton,{onClick:function onClick(){return setCartOpen(true);},children:/*#__PURE__*/_jsx(Badge,{badgeContent:getTotalItems(cartItems),color:\"error\",children:/*#__PURE__*/_jsx(AddShoppingCartIcon,{})})}),/*#__PURE__*/_jsx(Grid,{container:true,spacing:3,children:data===null||data===void 0?void 0:data.map(function(item){return/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sm:4,children:/*#__PURE__*/_jsx(Item,{item:item,handleAddToCart:handleAddToCart})},item.id);})})]});};export default App;","map":{"version":3,"sources":["/home/gudu/tryouts/My-Portfolio/Cart-Management_System/src/App.tsx"],"names":["useState","useQuery","Item","Cart","Drawer","LinearProgress","Grid","AddShoppingCartIcon","Badge","Wrapper","StyledButton","getProducts","fetch","json","App","cartOpen","setCartOpen","cartItems","setCartItems","data","isLoading","error","console","log","getTotalItems","items","reduce","ack","item","amount","handleAddToCart","clickedItem","prev","isItemInCart","find","id","map","handleRemoveFromCart"],"mappings":"67BAAA,OAASA,QAAT,KAAyB,OAAzB,CACA,OAASC,QAAT,KAAyB,aAAzB,CACA;AACA,MAAOC,CAAAA,IAAP,KAAiB,aAAjB,CACA,MAAOC,CAAAA,IAAP,KAAiB,aAAjB,CACA,MAAOC,CAAAA,MAAP,KAAmB,0BAAnB,CACA,MAAOC,CAAAA,cAAP,KAA2B,kCAA3B,CACA,MAAOC,CAAAA,IAAP,KAAiB,wBAAjB,CACA,MAAOC,CAAAA,mBAAP,KAAgC,oCAAhC,CACA,MAAOC,CAAAA,KAAP,KAAkB,yBAAlB,CACA;AACA,OAASC,OAAT,CAAkBC,YAAlB,KAAsC,cAAtC,CACA;AAWA,GAAMC,CAAAA,WAAW,0FAAG,yJACLC,CAAAA,KAAK,CAAC,mCAAD,CADA,6CACuCC,IADvC,+GAAH,kBAAXF,CAAAA,WAAW,0CAAjB,CAGA,GAAMG,CAAAA,GAAG,CAAG,QAANA,CAAAA,GAAM,EAAM,eACgBd,QAAQ,CAAC,KAAD,CADxB,wCACTe,QADS,eACCC,WADD,8BAEkBhB,QAAQ,CAAC,EAAD,CAF1B,yCAETiB,SAFS,eAEEC,YAFF,6BAGmBjB,QAAQ,CACzC,UADyC,CAEzCU,WAFyC,CAH3B,CAGRQ,IAHQ,WAGRA,IAHQ,CAGFC,SAHE,WAGFA,SAHE,CAGSC,KAHT,WAGSA,KAHT,CAOhBC,OAAO,CAACC,GAAR,CAAYJ,IAAZ,EAEA,GAAMK,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACC,KAAD,QACpBA,CAAAA,KAAK,CAACC,MAAN,CAAa,SAACC,GAAD,CAAcC,IAAd,QAAuBD,CAAAA,GAAG,CAAGC,IAAI,CAACC,MAAlC,EAAb,CAAuD,CAAvD,CADoB,EAAtB,CAGA,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,WAAD,CAA+B,CACrDb,YAAY,CAAC,SAAAc,IAAI,CAAI,CACnB;AACA,GAAMC,CAAAA,YAAY,CAAGD,IAAI,CAACE,IAAL,CAAU,SAAAN,IAAI,QAAIA,CAAAA,IAAI,CAACO,EAAL,GAAYJ,WAAW,CAACI,EAA5B,EAAd,CAArB,CAEA,GAAIF,YAAJ,CAAkB,CAChB,MAAOD,CAAAA,IAAI,CAACI,GAAL,CAAS,SAAAR,IAAI,QAClBA,CAAAA,IAAI,CAACO,EAAL,GAAYJ,WAAW,CAACI,EAAxB,gCACSP,IADT,MACeC,MAAM,CAAED,IAAI,CAACC,MAAL,CAAc,CADrC,GAEID,IAHc,EAAb,CAAP,CAKD,CACD;AACA,mCAAWI,IAAX,kCAAsBD,WAAtB,MAAmCF,MAAM,CAAE,CAA3C,KACD,CAbW,CAAZ,CAcD,CAfD,CAiBA,GAAMQ,CAAAA,oBAAoB,CAAG,QAAvBA,CAAAA,oBAAuB,CAACF,EAAD,CAAgB,CAC3CjB,YAAY,CAAC,SAAAc,IAAI,QACfA,CAAAA,IAAI,CAACN,MAAL,CAAY,SAACC,GAAD,CAAMC,IAAN,CAAe,CACzB,GAAIA,IAAI,CAACO,EAAL,GAAYA,EAAhB,CAAoB,CAClB,GAAIP,IAAI,CAACC,MAAL,GAAgB,CAApB,CAAuB,MAAOF,CAAAA,GAAP,CACvB,mCAAWA,GAAX,kCAAqBC,IAArB,MAA2BC,MAAM,CAAED,IAAI,CAACC,MAAL,CAAc,CAAjD,KACD,CAHD,IAGO,CACL,mCAAWF,GAAX,GAAgBC,IAAhB,GACD,CACF,CAPD,CAOG,EAPH,CADe,EAAL,CAAZ,CAUD,CAXD,CAaA,GAAIR,SAAJ,CAAe,mBAAO,KAAC,cAAD,IAAP,CACf,GAAIC,KAAJ,CAAW,mBAAO,iDAAP,CAEX,mBACE,MAAC,OAAD,yBACE,KAAC,MAAD,EAAQ,MAAM,CAAC,OAAf,CAAuB,IAAI,CAAEN,QAA7B,CAAuC,OAAO,CAAE,yBAAMC,CAAAA,WAAW,CAAC,KAAD,CAAjB,EAAhD,uBACE,KAAC,IAAD,EACE,SAAS,CAAEC,SADb,CAEE,SAAS,CAAEa,eAFb,CAGE,cAAc,CAAEO,oBAHlB,EADF,EADF,cAQE,KAAC,YAAD,EAAc,OAAO,CAAE,yBAAMrB,CAAAA,WAAW,CAAC,IAAD,CAAjB,EAAvB,uBACE,KAAC,KAAD,EAAO,YAAY,CAAEQ,aAAa,CAACP,SAAD,CAAlC,CAA+C,KAAK,CAAC,OAArD,uBACE,KAAC,mBAAD,IADF,EADF,EARF,cAaE,KAAC,IAAD,EAAM,SAAS,KAAf,CAAgB,OAAO,CAAE,CAAzB,UACGE,IADH,SACGA,IADH,iBACGA,IAAI,CAAEiB,GAAN,CAAU,SAAAR,IAAI,qBACb,KAAC,IAAD,EAAM,IAAI,KAAV,CAAyB,EAAE,CAAE,EAA7B,CAAiC,EAAE,CAAE,CAArC,uBACE,KAAC,IAAD,EAAM,IAAI,CAAEA,IAAZ,CAAkB,eAAe,CAAEE,eAAnC,EADF,EAAgBF,IAAI,CAACO,EAArB,CADa,EAAd,CADH,EAbF,GADF,CAuBD,CApED,CAsEA,cAAerB,CAAAA,GAAf","sourcesContent":["import { useState } from 'react';\nimport { useQuery } from 'react-query';\n// Components\nimport Item from './Item/Item';\nimport Cart from './Cart/Cart';\nimport Drawer from '@material-ui/core/Drawer';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Grid from '@material-ui/core/Grid';\nimport AddShoppingCartIcon from '@material-ui/icons/AddShoppingCart';\nimport Badge from '@material-ui/core/Badge';\n// Styles\nimport { Wrapper, StyledButton } from './App.styles';\n// Types\nexport type CartItemType = {\n  id: number;\n  category: string;\n  description: string;\n  image: string;\n  price: number;\n  title: string;\n  amount: number;\n};\n\nconst getProducts = async (): Promise<CartItemType[]> =>\n  await (await fetch('https://fakestoreapi.com/products')).json();\n\nconst App = () => {\n  const [cartOpen, setCartOpen] = useState(false);\n  const [cartItems, setCartItems] = useState([] as CartItemType[]);\n  const { data, isLoading, error } = useQuery<CartItemType[]>(\n    'products',\n    getProducts\n  );\n  console.log(data);\n\n  const getTotalItems = (items: CartItemType[]) =>\n    items.reduce((ack: number, item) => ack + item.amount, 0);\n\n  const handleAddToCart = (clickedItem: CartItemType) => {\n    setCartItems(prev => {\n      // 1. Is the item already added in the cart?\n      const isItemInCart = prev.find(item => item.id === clickedItem.id);\n\n      if (isItemInCart) {\n        return prev.map(item =>\n          item.id === clickedItem.id\n            ? { ...item, amount: item.amount + 1 }\n            : item\n        );\n      }\n      // First time the item is added\n      return [...prev, { ...clickedItem, amount: 1 }];\n    });\n  };\n\n  const handleRemoveFromCart = (id: number) => {\n    setCartItems(prev =>\n      prev.reduce((ack, item) => {\n        if (item.id === id) {\n          if (item.amount === 1) return ack;\n          return [...ack, { ...item, amount: item.amount - 1 }];\n        } else {\n          return [...ack, item];\n        }\n      }, [] as CartItemType[])\n    );\n  };\n\n  if (isLoading) return <LinearProgress />;\n  if (error) return <div>Something went wrong ...</div>;\n\n  return (\n    <Wrapper>\n      <Drawer anchor='right' open={cartOpen} onClose={() => setCartOpen(false)}>\n        <Cart\n          cartItems={cartItems}\n          addToCart={handleAddToCart}\n          removeFromCart={handleRemoveFromCart}\n        />\n      </Drawer>\n      <StyledButton onClick={() => setCartOpen(true)}>\n        <Badge badgeContent={getTotalItems(cartItems)} color='error'>\n          <AddShoppingCartIcon />\n        </Badge>\n      </StyledButton>\n      <Grid container spacing={3}>\n        {data?.map(item => (\n          <Grid item key={item.id} xs={12} sm={4}>\n            <Item item={item} handleAddToCart={handleAddToCart} />\n          </Grid>\n        ))}\n      </Grid>\n    </Wrapper>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}