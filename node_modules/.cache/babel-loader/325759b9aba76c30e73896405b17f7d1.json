{"ast":null,"code":"import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import CartItem from'../CartItem/CartItem';import{Wrapper}from'./Cart.styles';var Cart=function Cart(_ref){var cartItems=_ref.cartItems,addToCart=_ref.addToCart,removeFromCart=_ref.removeFromCart;var calculateTotal=function calculateTotal(items){return items.reduce(function(ack,item){return ack+item.amount*item.price;},0);};return/*#__PURE__*/_jsxs(Wrapper,{children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Your Shopping Cart\"}),cartItems.length===0?/*#__PURE__*/_jsx(\"p\",{children:\"No items in cart.\"}):null,cartItems.map(function(item){return/*#__PURE__*/_jsx(CartItem,{item:item,addToCart:addToCart,removeFromCart:removeFromCart},item.id);}),/*#__PURE__*/_jsxs(\"h2\",{children:[\"Total: $\",calculateTotal(cartItems).toFixed(2)]})]});};export default Cart;","map":{"version":3,"sources":["/home/gudu/tryouts/My-Portfolio/Cart-Management_System/src/Cart/Cart.tsx"],"names":["CartItem","Wrapper","Cart","cartItems","addToCart","removeFromCart","calculateTotal","items","reduce","ack","item","amount","price","length","map","id","toFixed"],"mappings":"wFAAA,MAAOA,CAAAA,QAAP,KAAqB,sBAArB,CACA,OAASC,OAAT,KAAwB,eAAxB,CASA,GAAMC,CAAAA,IAAqB,CAAG,QAAxBA,CAAAA,IAAwB,MAA8C,IAA3CC,CAAAA,SAA2C,MAA3CA,SAA2C,CAAhCC,SAAgC,MAAhCA,SAAgC,CAArBC,cAAqB,MAArBA,cAAqB,CAC1E,GAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACC,KAAD,QACrBA,CAAAA,KAAK,CAACC,MAAN,CAAa,SAACC,GAAD,CAAcC,IAAd,QAAuBD,CAAAA,GAAG,CAAGC,IAAI,CAACC,MAAL,CAAcD,IAAI,CAACE,KAAhD,EAAb,CAAoE,CAApE,CADqB,EAAvB,CAGA,mBACE,MAAC,OAAD,yBACE,0CADF,CAEGT,SAAS,CAACU,MAAV,GAAqB,CAArB,cAAyB,wCAAzB,CAAoD,IAFvD,CAGGV,SAAS,CAACW,GAAV,CAAc,SAAAJ,IAAI,qBACjB,KAAC,QAAD,EAEE,IAAI,CAAEA,IAFR,CAGE,SAAS,CAAEN,SAHb,CAIE,cAAc,CAAEC,cAJlB,EACOK,IAAI,CAACK,EADZ,CADiB,EAAlB,CAHH,cAWE,iCAAaT,cAAc,CAACH,SAAD,CAAd,CAA0Ba,OAA1B,CAAkC,CAAlC,CAAb,GAXF,GADF,CAeD,CAnBD,CAqBA,cAAed,CAAAA,IAAf","sourcesContent":["import CartItem from '../CartItem/CartItem';\nimport { Wrapper } from './Cart.styles';\nimport { CartItemType } from '../App';\n\ntype Props = {\n  cartItems: CartItemType[];\n  addToCart: (clickedItem: CartItemType) => void;\n  removeFromCart: (id: number) => void;\n};\n\nconst Cart: React.FC<Props> = ({ cartItems, addToCart, removeFromCart }) => {\n  const calculateTotal = (items: CartItemType[]) =>\n    items.reduce((ack: number, item) => ack + item.amount * item.price, 0);\n\n  return (\n    <Wrapper>\n      <h2>Your Shopping Cart</h2>\n      {cartItems.length === 0 ? <p>No items in cart.</p> : null}\n      {cartItems.map(item => (\n        <CartItem\n          key={item.id}\n          item={item}\n          addToCart={addToCart}\n          removeFromCart={removeFromCart}\n        />\n      ))}\n      <h2>Total: ${calculateTotal(cartItems).toFixed(2)}</h2>\n    </Wrapper>\n  );\n};\n\nexport default Cart;\n"]},"metadata":{},"sourceType":"module"}