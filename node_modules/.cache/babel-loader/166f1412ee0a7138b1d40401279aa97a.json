{"ast":null,"code":"import React from 'react';\nimport { notifyManager } from '../core/notifyManager';\nimport { QueriesObserver } from '../core/queriesObserver';\nimport { useQueryClient } from './QueryClientProvider';\nexport function useQueries(queries) {\n  var queryClient = useQueryClient(); // Create queries observer\n\n  var observerRef = React.useRef();\n  var observer = observerRef.current || new QueriesObserver(queryClient, queries);\n  observerRef.current = observer; // Update queries\n\n  if (observer.hasListeners()) {\n    observer.setQueries(queries);\n  }\n\n  var _React$useState = React.useState(function () {\n    return observer.getCurrentResult();\n  }),\n      currentResult = _React$useState[0],\n      setCurrentResult = _React$useState[1]; // Subscribe to the observer\n\n\n  React.useEffect(function () {\n    return observer.subscribe(notifyManager.batchCalls(setCurrentResult));\n  }, [observer]);\n  return currentResult;\n}","map":{"version":3,"sources":["/home/gudu/tryouts/My-Portfolio/Cart-Management_System/node_modules/react-query/es/react/useQueries.js"],"names":["React","notifyManager","QueriesObserver","useQueryClient","useQueries","queries","queryClient","observerRef","useRef","observer","current","hasListeners","setQueries","_React$useState","useState","getCurrentResult","currentResult","setCurrentResult","useEffect","subscribe","batchCalls"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAT,QAA8B,uBAA9B;AACA,SAASC,eAAT,QAAgC,yBAAhC;AACA,SAASC,cAAT,QAA+B,uBAA/B;AACA,OAAO,SAASC,UAAT,CAAoBC,OAApB,EAA6B;AAClC,MAAIC,WAAW,GAAGH,cAAc,EAAhC,CADkC,CACE;;AAEpC,MAAII,WAAW,GAAGP,KAAK,CAACQ,MAAN,EAAlB;AACA,MAAIC,QAAQ,GAAGF,WAAW,CAACG,OAAZ,IAAuB,IAAIR,eAAJ,CAAoBI,WAApB,EAAiCD,OAAjC,CAAtC;AACAE,EAAAA,WAAW,CAACG,OAAZ,GAAsBD,QAAtB,CALkC,CAKF;;AAEhC,MAAIA,QAAQ,CAACE,YAAT,EAAJ,EAA6B;AAC3BF,IAAAA,QAAQ,CAACG,UAAT,CAAoBP,OAApB;AACD;;AAED,MAAIQ,eAAe,GAAGb,KAAK,CAACc,QAAN,CAAe,YAAY;AAC/C,WAAOL,QAAQ,CAACM,gBAAT,EAAP;AACD,GAFqB,CAAtB;AAAA,MAGIC,aAAa,GAAGH,eAAe,CAAC,CAAD,CAHnC;AAAA,MAIII,gBAAgB,GAAGJ,eAAe,CAAC,CAAD,CAJtC,CAXkC,CAeS;;;AAG3Cb,EAAAA,KAAK,CAACkB,SAAN,CAAgB,YAAY;AAC1B,WAAOT,QAAQ,CAACU,SAAT,CAAmBlB,aAAa,CAACmB,UAAd,CAAyBH,gBAAzB,CAAnB,CAAP;AACD,GAFD,EAEG,CAACR,QAAD,CAFH;AAGA,SAAOO,aAAP;AACD","sourcesContent":["import React from 'react';\nimport { notifyManager } from '../core/notifyManager';\nimport { QueriesObserver } from '../core/queriesObserver';\nimport { useQueryClient } from './QueryClientProvider';\nexport function useQueries(queries) {\n  var queryClient = useQueryClient(); // Create queries observer\n\n  var observerRef = React.useRef();\n  var observer = observerRef.current || new QueriesObserver(queryClient, queries);\n  observerRef.current = observer; // Update queries\n\n  if (observer.hasListeners()) {\n    observer.setQueries(queries);\n  }\n\n  var _React$useState = React.useState(function () {\n    return observer.getCurrentResult();\n  }),\n      currentResult = _React$useState[0],\n      setCurrentResult = _React$useState[1]; // Subscribe to the observer\n\n\n  React.useEffect(function () {\n    return observer.subscribe(notifyManager.batchCalls(setCurrentResult));\n  }, [observer]);\n  return currentResult;\n}"]},"metadata":{},"sourceType":"module"}